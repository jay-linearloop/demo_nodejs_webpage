name: Deploy to AWS ECR

on:
  push:
    branches:
      - uat
      - prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      AWS_ACCOUNT_ID: 580655243880
      REPO_NAME: shop_sso

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set ENV and VERSION
        run: |
          if [[ "${GITHUB_REF##*/}" == "prod" ]]; then
            echo "ENV=PROD" >> $GITHUB_ENV
            echo "${{ secrets.PROD_ENV }}" > .env
          else
            echo "ENV=uat" >> $GITHUB_ENV
            echo "${{ secrets.UAT_ENV }}" > .env
          fi
          echo "VERSION=V${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          echo ".env contents:"
          cat .env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS \
          --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build, Tag, and Push Docker Image
        run: |
          IMAGE=$ENV/$REPO_NAME:$VERSION
          ECR_URL=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

          echo "Building image: $IMAGE"
          docker build -t $IMAGE .
          docker tag $IMAGE $ECR_URL/$IMAGE
          docker push $ECR_URL/$IMAGE
